
何时你会想使用远程版本库，而不是将所有工作保存在本地？

	1、当我和其他人合作开发一个项目时
	2、当我想共享我的代码是
	3、当我想把我的工作做一个备份并能在不同的终端上使用时


为何你希望始终手动地拉取更改，而不是让 Git 自动与你的远程版本库保持同步？

	因为自动保持同步的话有可能将我的代码同步成一个有bug甚至无法运行的版本，手动拉取则可以避免这种问题。


说明Fork、克隆和分支之间的不同。何时使用某种功能而不是另一种？

	分支是在同一个版本库中新建一个不同于master的commit；Fork和克隆都是将一个版本库完全拷贝的另一个地方，不同的是Fork是GitHub提供的一项功能，只能在GitHub中使用，而克隆则可用在其他地方。
	
    Fork：在GitHub想修改某个版本库时，使用Fork。
    克隆：想在本地修改版本时，会使用克隆将整个版本库克隆下来。
    分支：仅仅是想在当前版本下做一些更改、增强，同时保证当前版本运行正常的情况下，使用分支，特别是与其他人合作开发的时候。


拥有远程分支的上次已知状态的副本（存储在本地）有何好处？

	拥有远程分支上的已知状态的副本，可以方便我们在离线状态下工作时很方便的得知远程分支上的版本情况。


如何在不使用 Git 或 GitHub 的情况下开展协同？哪种做法更容易？哪种做法更困难？

	 在不使用 Git 、GitHub 或其他类似的同步系统的的情况下开展协同，我会考虑使用共享文件夹的形式将整个工作
	 目录共享给所有合作者，并且明确每个合作者负责的部分，尽可能做到不要有重复工作的地方，因为使用这种方法，无法保证多个人对同一个文件的更改不会造成bug。
	 相比而言，使用 Git 、GitHub 或其他类似的同步系统的的情况下开展协同工作容易得多。


何时你会想在独立的分支中而不是直接在 master 中进行更改？两种方法各有何好处？

	跟很多人合作时，创建独立的分支可以帮助我们跟踪每个人的工作成果和效果。