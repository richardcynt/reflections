查看文件的两个版本之间的差异如何帮助你了解引入的错误？

    快速定位差异的地方，省去手动查找的时间。

从长远来看，能轻松访问文件的整个历史记录将如何提高编程者的效率？

    新版本出现问题时可以快速回溯到之前能正确运行的版本，并根据两者的差异性查找bug。

你认为，手动选择何时创建提交（像在 Git 中做的那样）与自动保存版本（如 Google Docs 所做的那样）各有何优缺点？

    手动保存版本更有指向性，保存的每个版本都能代表一个逻辑上不同，保存的内容也更适合程序员工作中的需要。
    自动保存版本不受使用者控制，保存的内容可能是无意义的中间件。

为何你认为一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，而其他系统（例如 Google Docs）单独对待每个文件？

    因为使用场景不同，类似Google Docs的系统所处理的对象是可以独立运行的，对象与对象之间不会存在逻辑关系，
    因此可以单独对待文件。而类似Git的系统所面对的对象通常包含多个文件，而且文件之间存在逻辑关系，缺少一个会导致项目无法运行，因此允许在一次提交中保存多个文件。

如何使用命令 git log 和 git diff 来查看文件的历史记录？

    git log
    git diff commitID commitID

使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？

    大胆尝试，出错可以回溯，而且可以通过对比查找错误。

现在你已设置了工作空间，你想尝试使用 Git 来做些什么？

    跟着课程学习，多加练习。
